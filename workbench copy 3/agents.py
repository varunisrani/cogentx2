# An - agents.py
# Generated from template: spotify_firecrawl_agent
# Based on request: Create an agent that can control Firecrawl and Spotify.
# Using detected services: Spotify, Firecrawl

import logging
import traceback
import sys
from typing import List, Optional, Dict, Any
from pydantic_ai import Agent, get_model
from .models import Config
from .tools import *  # Import all tool functions

from models import Config
from pydantic_ai import Agent
from pydantic_ai.models.openai import OpenAIModel
from pydantic_ai.providers.openai import OpenAIProvider
from tools import create_mcp_server, display_mcp_tools, execute_mcp_tool, run_firecrawl_query
from tools import display_mcp_tools, execute_mcp_tool, create_mcp_server, run_spotify_query
import asyncio
import logging
import sys
import traceback

# firecrawl_agent - agents.py
# Generated by merging templates: spotify, firecrawl
# Based on request: Create an agent that can control Firecrawl and Spotify.
# Using services: SPOTIFY, FIRECRAWL

system_prompt = """
You are the An Assistant, a versatile AI capable of working with Spotify and Firecrawl services.

1. SPOTIFY Capabilities:
"


IMPORTANT USAGE NOTES:
- When responding to the user, use the most appropriate service for their request
- If the user's request spans multiple services, use all relevant services in combination
- Always be concise, helpful, and accurate in your responses
- If you don't know how to do something with the available tools, explain what you can do instead
"""

